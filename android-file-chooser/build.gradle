apply plugin: 'com.android.library'

def VERSION_NAME = project.VERSION_NAME
def VERSION_CODE = Integer.parseInt(project.VERSION_CODE)

def ANDROID_COMPILE_SDK_VERSION = Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
def ANDROID_TARGET_SDK_VERSION = Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
//def ANDROID_BUILD_TOOLS_VERSION = project.ANDROID_BUILD_TOOLS_VERSION
def ANDROID_MIN_SDK_VERSION = Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)

def JAVA_COMPATIBILITY =  JavaVersion.valueOf(project.JAVA_COMPATIBILITY)

configurations.all {
    resolutionStrategy {
        force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.22'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.22'
        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'
    }
}

android {
    android.buildFeatures.buildConfig = true
    namespace 'com.obsez.android.lib.filechooser'
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION
    //buildToolsVersion ANDROID_BUILD_TOOLS_VERSION
    resourcePrefix "obsez_fc__"

    defaultConfig {
        minSdkVersion ANDROID_MIN_SDK_VERSION
        targetSdkVersion ANDROID_TARGET_SDK_VERSION
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JAVA_COMPATIBILITY
        targetCompatibility JAVA_COMPATIBILITY
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'InvalidPackage', 'OldTargetApi', 'IconDensities', 'deprecation'
        ignoreWarnings true
        lintConfig file('lint.xml')
        quiet true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
}
